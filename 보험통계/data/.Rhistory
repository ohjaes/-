if (any(number) == ind[i]) {
next
}else{
number <- c(number,ind[i])
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
}
}
}
number
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind)
if(length(ind) >= 2){
for (i in 1:length(ind)) {
if (any(number) == ind[i]) {
next
}else{
number <- c(number,ind[i])
cat("2개",number)
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number)
}
}
}
num <- c(148
,136
,133
,140
,134
,132
,135
,136
,108
,140
,139
,142
,146
,138
,132
,133
,145
,135
,134
,143
,132
,104
,112
,135
,127
,136
,150
,118
,116
,128
,137
,114
,145
,148
,127
,130
,134
,131
,135
,141
,117
,127
,155
,130
,134
)
plot(num,type = 'l',lty=1)
x <- sort(num)[40:45]
number = vector()
number
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (i in 1:length(ind)) {
if (any(number) == ind[i]) {
next
}else{
number <- c(number,ind[i])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (i in 1:length(ind)) {
if (any(number) == ind[i]) {
}else{
number <- c(number,ind[i])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if (any(number) == ind[i]) {
next
}else{
number <- c(number,ind[i])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if (any(number) == ind[j]) {
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if (any(number) == ind[j]) {
print('pass\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if (any(number) == ind[j]) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
any(number) == 1
number
any(number)==2
any(number)==1
any(number)
as.character(any(number))
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number[1:length(number)]) == ind[j]) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number[1:]) == ind[j]) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
number
number[1:]
number[:]
number[1,]
number[-1]
number[1]
number[1,]
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number)+1 == ind[j]+1) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
any(number)+1 == 35
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number+1) == ind[j]+1) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number) == ind){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
any(number)==3
any(number)==TRUE
any(number)==27
number
any(number)== "27"
any(number)== 27
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
cat("index",ind,"\n")
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number==ind[j])) {
cat('pass',ind[j],'\n')
next
}else{
number <- c(number,ind[j])
cat("2개",number,"\n")
}
}
}else{
if(any(number == ind)){
next
}else{
number = c(number,ind)
cat("1개",number,"\n")
}
}
}
plot(num,type = 'l',lty=1)
x <- sort(num)[40:45]
number = vector()
for (i in 1:6) {
ind = which(num == x[i])
if(length(ind) >= 2){
for (j in 1:length(ind)) {
if(any(number==ind[j])) {
next
}else{
number <- c(number,ind[j])
}
}
}else{
if(any(number == ind)){
next
}else{
number = c(number,ind)
}
}
}
number
x <- rnorm(47,35.13,21.64,max=72,min=0)
x <- rnorm(47,35.13,21.64)
hist(x)
plot(x)
install.packages(c("nlme", "progress"))
install.packages(c("digest", "dplyr", "glmnet", "knitr", "mpath", "nlme", "progress", "rvest", "xfun"))
a = c(1,0,0,1,1,0)
b = factor("a","b","c","d","e","f")
d = factor(1,2,3,4,5,6)
b = factor(a,b,c,d,e,f)
b = c('국','영','수','사','과','한')
d = factor(1,2,3,4,5,6)
result = glm(a~b+d,family = logit)
setwd("C:/Users/user/Desktop/오재훈/대학교_자료/보험통계/data")
library(MASS)
##이산형변수 링크펑션 함수 코드
logitexp <- function(exposure = 1)
{ linkfun <- function(mu) {
eta <- if (any(exposure-mu <= 0)) log((mu)/abs(mu-exposure)) else log((mu)/(exposure-mu))
eta
}
linkinv <- function(eta) {
thresh <- -log(.Machine$double.eps)
eta <- pmin(thresh, pmax(eta, -thresh))
exposure*(exp(eta)/(1 + exp(eta)))
}
mu.eta <- function(eta)
{
thresh <- -log(.Machine$double.eps)
res <- rep(.Machine$double.eps, length(eta))
res[abs(eta) < thresh] <- ((exposure*exp(eta))/(1 + exp(eta))^2)[abs(eta) < thresh]
res
}
valideta <- function(eta) TRUE
link <- paste("logexp(", exposure, ")", sep="")
structure(list(linkfun = linkfun, linkinv = linkinv, mu.eta = mu.eta,
valideta = valideta, name = link), class = "link-glm") }
####################################################################################
x <- rnorm(10)
y <- rpois(10,5)
res <- glm(y~x, family = poisson)
sum(rstandard(res))
summary(res)
dat <- read.csv("Birth.csv",header=T)
dat <- dat[,c(1,2)]
dat
head(dat)
res <- glm(children~age, family = "poisson",data=dat)
summary(res)
anova(res)
sum(rstandard(res))
sum(resid(res))
res2 <- glm(children~age, family = poisson(link="identity"),data= dat,start=c(1,1) )
summary(res2)
warnings()
res2 <- glm(children~age, family = poisson(link="identity"),data= dat,start=c(-0.965,0.057))
summary(res2)
warnings()
##
dat2 <- read.csv("diabetes.csv",header=T)
dat2
dat2 <- dat2[-17,]
dat2
res21 <- glm(deaths~offset(log(popn))+gender+age,family="poisson",data=dat2)
summary(res21)
##å?̶? ????
dat2$age <- relevel(dat2$age, ref="45-54")
dat2$gender <- relevel(dat2$gender,ref="Male")
res20 <- glm(deaths/popn~gender+age,family="poisson",data=dat2)
summary(res20)
res21 <- glm(deaths~offset(log(popn))+gender+age,family="poisson",data=dat2)
summary(res21)
anova(res21)
##
library(MASS)
stepAIC
stepAIC(res21)
AIC(res21)
res21_1 <- glm(deaths~offset(log(popn))+gender+age+(age^2),family="poisson",data=dat2)
AIC(res21_1)
res21_2 <- glm(deaths~offset(log(popn))+gender+agemidpt,family="poisson",data=dat2)
AIC(res21_2)
res21_2 <- glm(deaths~offset(log(popn))+gender+agemidpt+I(agemidpt^2),family="poisson",data=dat2)
AIC(res21_2)
##
dat3 <- read.csv("Third_party_claims.csv",header=T)
dat3
head(dat3)
res31 <- glm(claims~offset(log(population))+I(log(accidents)),family = "poisson",data=dat3)
summary(res31)
15837/174
a <- residuals(res31,type = "pearson")
b <- residuals(res31,type = "deviance")
sum(a^2)/174
sum(b^2)/174
library(MASS)
resnb <- glm.nb(claims~offset(log(population))+I(log(accidents)),data=dat3)
summary(resnb)
AIC(res31)
AIC(resnb)
a <- as.numeric(logLik(resnb))
b <- as.numeric(logLik(res31))
2*(a - b)
qchisq(0.9,1)
########################
dat4 <- read.csv("Third_party_claims.csv",header=T)
res41 <- glm(claims~offset(log(population))+I(log(accidents)),family = "poisson",data=dat4)
summary(res41)
resq <- glm(claims~offset(log(population))+I(log(accidents)),family = "quasipoisson",data=dat4)
summary(resq)
######logistic regression
dir()
datc <- read.csv("car.csv",header=T)
datc
resc <- glm(clm~veh_value, family = binomial,data=datc)
summary(resc)
datc
######logistic regression
dir()
datc <- read.csv("car.csv",header=T)
datc
resc <- glm(clm~veh_value, family = binomial,data=datc)
summary(resc)
resc <- glm(cbind(clm,1-clm)~veh_value, family = binomial, data=datc)
summary(resc)
resl <- glm(clm~veh_value,family = binomial(logitexp(datc$exposure)),data=datc)
summary(resl)
