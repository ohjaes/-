return(result)
}
likelihood(0.5)
sum1 = 0
for (i in seq(0.1,0.9,by=0.1)) {
sum1 = sum1 + likelihood(i)
sum1 <<- sum1
}
sum1
s = 0
for (i in seq(0.1,0.9,by=0.1)) {
s = s + (i^3)*(1-i)^2
print(s)
}
for (i in seq(0.1,0.9,by=0.1)) {
print(likelihood(i))
}
likelihood(0.5)
x <- seq(0.1,0.9,by=0.1)
y <- c()
x <- seq(0.1,0.9,by=0.1)
y <- c()
for (i in seq(0.1,0.9,by=0.1)) {
y <- c(y,likelihood(i))
print(likelihood(i))
}
plot(x,y)
plot(x,y,xlab = theta,ylab = posterior)
plot(x,y,xlab = "theta",ylab = "posterior")
0.5^5
theta <- seq(-3,3,length = 500)
plot(theta,dnorm(theta,0.3,0.5), type='l',ylab="density")
abline(v=qnorm(c(0.049,0.999,0.3,0.5),lty=2,col=2))
abline(v=qnorm(c(0.025,0.975,0.3,0.5),lty=2,col=2))
theta <- seq(-3,3,length = 500)
plot(theta,dnorm(theta,0.3,0.5), type='l',ylab="density")
abline(v=qnorm(c(0.049,0.999,0.3,0.5),lty=2,col=2)))
abline(v=qnorm(c(0.025,0.975,0.3,0.5),lty=2,col=2)))
abline(v=qnorm(c(0.049,0.999),0.3,0.5),lty=2,col=2))
abline(v=qnorm(c(0.025,0.975),0.3,0.5),lty=2,col=2))
abline(v=qnorm(c(0.049,0.999),0.3,0.5,lty=2,col=2))
abline(v=qnorm(c(0.025,0.975),0.3,0.5,lty=2,col=2))
abline(v=qnorm(c(0.049,0.999),0.3,0.5),lty=2,col=2)
abline(v=qnorm(c(0.025,0.975),0.3,0.5),lty=2,col=2)
theta <- seq(-3,3,length = 500)
plot(theta,dnorm(theta,0.3,0.5), type='l',ylab="density")
abline(v=qnorm(c(0.049,0.999),0.3,0.5),lty=2,col=2)
abline(v=qnorm(c(0.025,0.975),0.3,0.5),lty=1,col=4)
theta <- seq(-3,3,length = 500)
plot(theta,dnorm(theta,0.3,0.5), type='l',ylab="density")
abline(v=qnorm(c(0.049,0.999),0.3,0.5),lty=2,col=2)
abline(v=qnorm(c(0.025,0.975),0.3,0.5),lty=1,col=4)
16/40
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
plot(x,prior)
posterior <- dbeta(x,0.44+2,1.76+8)
lines(x,posterior)
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1)
lines(x,posterior,lty=2,col = 2)
#6
hpdsample = function(theta,level=0.95){
N = length(theta)
theta.sort = sort(theta)theta
M = ceiling(N*level)
nci = N-M
ci.width = rep(0,nci)
for (i in 1:nci) {
ci.width[i] = theta.sort[i+M] - theta.sort[i]
}
index = which.min(ci.width)
hpd = c(theta.sort[index],theta.sort[index+M])
return(hpd)
}
#6
hpdsample = function(theta,level=0.95){
N = length(theta)
theta.sort = sort(theta)
M = ceiling(N*level)
nci = N-M
ci.width = rep(0,nci)
for (i in 1:nci) {
ci.width[i] = theta.sort[i+M] - theta.sort[i]
}
index = which.min(ci.width)
hpd = c(theta.sort[index],theta.sort[index+M])
return(hpd)
}
theta1 = rbeta(1000,11,11)
theta2 = rbeta(1000,15,7)
xi = log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd = hpdsample(xi)
plot(density(xi),type='l',xlab = "log odds ratio",ylab = "posterior density")
abline(v=hpd,lty=2)
text(mean(xi),0.06,"95% hpd interval")
stdev(xi)
?mean()
?mean
sd(xi)
sd(xi)/sqrt(1000)
theta1 = rbeta(1000,11,11)
theta2 = rbeta(1000,15,7)
xi = log((theta1/(1-theta1))/(theta2/(1-theta2)))
x1sample = rbinom(1000,10,theta1)
x2sample = rbinom(1000,14,theta2)
hpd = hpdsample(xi)
plot(table(x1sample)/1000,type='h',xlab = "x1",ylab = "predictive density")
theta1 = rbeta(1000,11,11)
theta2 = rbeta(1000,15,7)
xi = log((theta1/(1-theta1))/(theta2/(1-theta2)))
x1sample = rbinom(1000,10,theta1)
x2sample = rbinom(1000,14,theta2)
hpd1 = hpdsample(x1smaple)
hpd2 = hpdsample(x1sample)
plot(table(x1sample)/1000,type='l',xlab = "x1",ylab = "predictive density")
abline(v=hpd1,lty=2)
hpd1 = hpdsample(x1smaple)
hpd1 = hpdsample(x1smaple)
x1sample = rbinom(1000,10,theta1)
x2sample = rbinom(1000,14,theta2)
hpd1 = hpdsample(x1smaple)
hpd1 = hpdsample(x1sample)
hpd2 = hpdsample(x1sample)
plot(table(x1sample)/1000,type='l',xlab = "x1",ylab = "predictive density")
abline(v=hpd1,lty=2)
plot(table(x2sample)/1000,type='l',xlab = "x2",ylab = "predictive density")
abline(v=hpd2,lty=2)
theta1 = rbeta(1000,11,11)
theta2 = rbeta(1000,15,7)
xi = log((theta1/(1-theta1))/(theta2/(1-theta2)))
x1sample = rbinom(1000,10,theta1)
x2sample = rbinom(1000,14,theta2)
hpd1 = hpdsample(x1sample)
hpd2 = hpdsample(x2sample)
plot(table(x1sample)/1000,type='l',xlab = "x1",ylab = "predictive density")
abline(v=hpd1,lty=2)
plot(table(x2sample)/1000,type='l',xlab = "x2",ylab = "predictive density")
abline(v=hpd2,lty=2)
theta1 = rbeta(1000,11,11)
theta2 = rbeta(1000,15,7)
xi = log((theta1/(1-theta1))/(theta2/(1-theta2)))
x1sample = rbinom(1000,10,theta1)
x2sample = rbinom(1000,14,theta2)
hpd1 = hpdsample(x1sample)
hpd2 = hpdsample(x2sample)
plot(table(x1sample)/1000,type='l',xlab = "x1",ylab = "predictive density")
abline(v=hpd1,lty=2)
text(mean(x1sample),0.06,"95% hpd interval")
plot(table(x2sample)/1000,type='l',xlab = "x2",ylab = "predictive density")
abline(v=hpd2,lty=2)
text(mean(x2sample),0.06,"95% hpd interval")
plot(rbeta(100,0.44,1.76))
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1)
lines(x,posterior,lty=2,col = 2)
?legend
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1,xlab = "theta",ylab = "density")
lines(x,posterior,lty=2,col = 2)
legend(0.6,10,legend = c("Beta(0.44,1.76)","Beta(2.44,9.76)"),lty=c(1,2),col=c(1,2))
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1,xlab = "theta",ylab = "density")
lines(x,posterior,lty=2,col = 2)
legend(0.6,15,legend = c("Beta(0.44,1.76)","Beta(2.44,9.76)"),lty=c(1,2),col=c(1,2))
theta <- rbeta(1000,2.44,9.76)
hpd = hpdsample(theta)
plot(x,posterior,type='l',xlab = "theta",ylab = "density")
abline(v=hpd,lty=2)
hpd
text(0.15,1.3,"95% hpd interval")
theta <- rbeta(1000,2.44,9.76)
hpd = hpdsample(theta)
plot(x,posterior,type='l',xlab = "theta",ylab = "density")
abline(v=hpd,lty=2)
text(0.18,1.3,"95% hpd interval")
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
plot(x,x1,type='l',lty=1,col=1)
lines(x,x2,lty=2,col=2)
x <- seq(0,1,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
plot(x,x1,type='l',lty=1,col=1)
lines(x,x2,lty=2,col=2)
hpd1
hpd2
x <- seq(-10,10,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
plot(x,x1,type='l',lty=1,col=1)
lines(x,x2,lty=2,col=2)
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd3 = hpdsample(x3)
plot(x,x3,type='l')
plot(density(x1),type='l',lty=1,col=1)
lines(density(x2),lty=2,col=2)
plot(density(x1),type='l',lty=1,col=1,ylim=c(-1,5))
plot(density(x1),type='l',lty=1,col=1,ylim=c(-1,2))
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,1))
x <- seq(-10,10,length = 1000)
theta2 = rbeta(1000,2.44,9.76)
theta1 = rbeta(1000,0.44,1.76)
x1 <- log(theta1/(1-theta1))
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd1 = hpdsample(x1)
x2 <- log(theta2/(1-theta2))
hpd3 = hpdsample(x3)
hpd2 = hpdsample(x2)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,1))
lines(density(x2),lty=2,col=2)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.7))
lines(density(x2),lty=2,col=2)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.6))
lines(density(x2),lty=2,col=2)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1,xlab = "theta",ylab = "density")
lines(x,posterior,lty=2,col = 2)
legend(0.6,15,legend = c("Beta(0.44,1.76)","Beta(2.44,9.76)"),lty=c(1,2),col=c(1,2))
plot(x,prior,type="l",lty=1,col=1,xlab = "theta",ylab = "prior,posterior")
lines(x,posterior,lty=2,col = 2)
legend(0.6,15,legend = c("Beta(0.44,1.76)","Beta(2.44,9.76)"),lty=c(1,2),col=c(1,2))
x <- seq(-10,10,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
hpd1 = hpdsample(x1)
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd2 = hpdsample(x2)
hpd3 = hpdsample(x3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
plot(x,x3,type='l')
x <- seq(-10,10,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
hpd3 = hpdsample(x3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
x <- seq(-10,10,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x1 <- log(theta1/(1-theta1))
x2 <- log(theta2/(1-theta2))
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
hpd3 = hpdsample(x3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd1,lty=2,col=4)
abline(v=hpd2,lty=2,col=5)
abline(v=hpd2,lty=2,col=3)
legend(-18,0.3,legend = c("prior","posterior"),lty = c(1,2),col=c(1,2))
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd1,lty=3,col=4)
abline(v=hpd2,lty=4,col=3)
legend(-18,0.3,legend = c("prior","posterior"),lty = c(1,2),col=c(1,2))
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=3,col=3)
legend(-22,0.45,legend = c("prior","posterior","prior"),lty = c(1,2),col=c(1,2))
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=3,col=3)
legend(-22,0.45,legend = c("prior","posterior","95% hpd interval"),lty = c(1,2,3),col=c(1,2,3))
hpd2
plot(dbeta(x,0.44,1.76))
x
plot(dbeta(seq(0,1,length = 1000),0.44,1.76))
#2
x <- seq(0,1,length = 500)
prior <- dbeta(x,0.44,1.76)
posterior <- dbeta(x,0.44+2,1.76+8)
plot(x,prior,type="l",lty=1,col=1,xlab = "theta",ylab = "prior,posterior")
lines(x,posterior,lty=2,col = 2)
theta <- rbeta(1000,2.44,9.76)
hpd = hpdsample(theta)
legend(0.6,15,legend = c("Beta(0.44,1.76)","Beta(2.44,9.76)"),lty=c(1,2),col=c(1,2))
abline(v=hpd,lty=2)
plot(x,posterior,type='l',xlab = "theta",ylab = "density")
x <- seq(-10,10,length = 1000)
theta1 = rbeta(1000,0.44,1.76)
theta2 = rbeta(1000,2.44,9.76)
x2 <- log(theta2/(1-theta2))
x1 <- log(theta1/(1-theta1))
x3 <- log((theta1/(1-theta1))/(theta2/(1-theta2)))
hpd1 = hpdsample(x1)
hpd2 = hpdsample(x2)
text(0.18,1.3,"95% hpd interval")
hpd3 = hpdsample(x3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=3,col=3)
legend(-22,0.45,legend = c("prior","posterior","95% hpd interval"),lty = c(1,2,3),col=c(1,2,3))
#6
theta1 = rbeta(1000,11,11)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=4,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=5,col=3)
abline(v=hpd2,lty=6,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=6,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=7,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=8,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=9,col=3)
plot(density(x1),type='l',lty=1,col=1,ylim=c(0,0.5))
lines(density(x2),lty=2,col=2)
abline(v=hpd2,lty=3,col=3)
legend(-22,0.45,legend = c("prior","posterior","95% hpd interval"),lty = c(1,2,3),col=c(1,2,3))
### Box plot
setwd('C:/Users/user/Desktop/오재훈/대학교_자료/다변량/1주차실습')
data<-read.table("T1-1.DAT")
head(data)
colnames(data)<-c("Player payroll","Won-lost percentage")
op<-par(mfrow=c(1,2))
boxplot(data[,1],main="Player payroll")
boxplot(data[,2],main="Won-lost percentage")
par(op)
set.seed(123)
x<-rnorm(100)
x[50]<-x[50]+3
x[75]<-x[75]-3
boxplot(x,range=1.5)  #### idenifying some outliers
### Scatter Plots
data<-read.table("T1-2.DAT")
head(data)
colnames(data)<-c("Density","Machine Direction","Cross Direction")
pairs(data)
#pairs(~data[,1]+data[,2]+data[,3])
### Scatter plots with box plots (by Prof.Ripley)
panel.bxp <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 2, usr[3:4]))
boxplot(x, add=TRUE)
}
pairs(data, diag.panel = panel.bxp, text.panel = function(...){})
boxplot(data[,1],range=1.5,main="Density")
### "GGally" package
# install.packages('GGally')
library(GGally)
data(tips, package="reshape")
ggpairs(data=tips, # data.frame with variables
columns=1:3, # columns to plot, default to all.
title="tips data", # title of the plot
)
### Scatter Plot in 3D
# install.packages('scatterplot3d')
library(scatterplot3d)
data<-read.table("T1-3.DAT")
head(data)
colnames(data)<-c("Mass","SVL","HLS")
attach(data)
scatterplot3d(SVL,HLS,Mass,main="3D Scatterplot")
# Spinning 3d Scatterplot
# install.packages('rgl')
library(rgl)
plot3d(SVL,HLS,Mass,col="red", size=3)
# Growth curves
data<-read.table("T1-4.DAT")
head(data)
colnames(data)<-c("Wt2","Wt3","Wt4","Wt5","Length2","Length3","Length4","Length5")
Year<-c(2,3,4,5)
plot(Year,data[1,1:4],type="l",ylim=c(50,250),ylab="Weight",xlab="Year")
for (k in 2:7){
lines(Year,data[k,1:4])
}
# ggplots for growth curves
data$id<-1:dim(data)[1]
dat2<-cbind(data$Wt2,data$Length2,data$id,2)
dat3<-cbind(data$Wt3,data$Length3,data$id,3)
dat4<-cbind(data$Wt4,data$Length4,data$id,4)
dat5<-cbind(data$Wt5,data$Length5,data$id,5)
longdata<-rbind(dat2,dat3,dat4,dat5)
colnames(longdata)<-c("Wt","Length","id","time")
longdata<-as.data.frame(longdata)
library(ggplot2)
qplot(time, Wt, data = longdata, group = id, color = factor(id), geom = 'line')
qplot(time, Wt, data = longdata, facets=~id, geom = 'line')
## Chernoff Face
# install.packages('TeachingDemos')
library(TeachingDemos)
data<-read.table("T1-4.DAT")
head(data)
faces2(data)
### The problem of high-dimension : knn
## p=3
train0<-cbind(rnorm(1000,mean=0),rnorm(1000),rnorm(1000))
train1<-cbind(rnorm(1000,mean=2),rnorm(1000),rnorm(1000))
train<-rbind(train0,train1)
test0<-cbind(rnorm(100,mean=0),rnorm(100),rnorm(100))
test1<-cbind(rnorm(100,mean=2),rnorm(100),rnorm(100))
test<-rbind(test0,test1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
table(fit,cl.test)
## p=1000
train0<-matrix(rnorm(1000*1000),1000,1000)
train1<-cbind(rnorm(1000,mean=2),matrix(rnorm(1000*999),1000,999))
train<-rbind(train0,train1)
test0<-matrix(rnorm(100*1000),100,1000)
test1<-cbind(rnorm(100,mean=2),matrix(rnorm(100*999),100,999))
test<-rbind(test0,test1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
table(fit,cl.test)
## p=3
train0<-cbind(rnorm(1000,mean=0),rnorm(1000),rnorm(1000))
train0
train1<-cbind(rnorm(1000,mean=2),rnorm(1000),rnorm(1000))
train<-rbind(train0,train1)
test0<-cbind(rnorm(100,mean=0),rnorm(100),rnorm(100))
test1<-cbind(rnorm(100,mean=2),rnorm(100),rnorm(100))
test<-rbind(test0,test1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.train
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
fit
table(fit,cl.test)
cl.test
cl.train
## p=1000
train0<-matrix(rnorm(1000*1000),1000,1000)
train1<-cbind(rnorm(1000,mean=2),matrix(rnorm(1000*999),1000,999))
train<-rbind(train0,train1)
test0<-matrix(rnorm(100*1000),100,1000)
test1<-cbind(rnorm(100,mean=2),matrix(rnorm(100*999),100,999))
test<-rbind(test0,test1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
table(fit,cl.test)
## p=3
train0<-cbind(rnorm(1000,mean=0),rnorm(1000),rnorm(1000))
train1<-cbind(rnorm(1000,mean=2),rnorm(1000),rnorm(1000))
train<-rbind(train0,train1)
test0<-cbind(rnorm(100,mean=0),rnorm(100),rnorm(100))
test1<-cbind(rnorm(100,mean=2),rnorm(100),rnorm(100))
test<-rbind(test0,test1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
table(fit,cl.test)
## p=1000   맨뒷장에 필기한거 돌려본거다.
train0<-matrix(rnorm(1000*1000),1000,1000)
train1<-cbind(rnorm(1000,mean=2),matrix(rnorm(1000*999),1000,999))
test0<-matrix(rnorm(100*1000),100,1000)
test1<-cbind(rnorm(100,mean=2),matrix(rnorm(100*999),100,999))
test<-rbind(test0,test1)
train<-rbind(train0,train1)
cl.train<-as.factor(c(rep(0,1000),rep(1,1000)))
cl.test<-c(rep(0,100),rep(1,100))
library(class)
fit<-knn(train,test,cl.train,k=3)
table(fit,cl.test)
table(fit,cl.test)
